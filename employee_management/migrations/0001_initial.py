# Generated by Django 5.0.3 on 2024-03-29 06:10

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('country_management', '0027_alter_countryoverview_country_description_and_more'),
        ('employer_management', '0003_rename_city1_employercompanyaddress_city'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='ContractTerm',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('contract_term', models.CharField(choices=[('definite', 'Definite contract'), ('infinite', 'Indefinite contract')], max_length=100)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'E. Contract Term',
                'verbose_name_plural': 'E. Contract Terms',
            },
        ),
        migrations.CreateModel(
            name='HealthInsurance',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('health_insurance', models.CharField(choices=[('standard', 'Standard health insurance'), ('premium', 'Premium health insurance'), ('no_health', 'No health insurance')], max_length=100)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'D. Health Insurance',
                'verbose_name_plural': 'D. Health Insurance',
            },
        ),
        migrations.CreateModel(
            name='Employee',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('eligibility', models.CharField(choices=[('permanent', 'Yes, they’re a permanent resident'), ('work_permit', 'Yes, they have a work permit'), ('no_permit_permanent', 'No, they don’t have a work permit and are not a permanent resident')], max_length=100)),
                ('first_name', models.CharField(max_length=255)),
                ('last_name', models.CharField(max_length=255)),
                ('email', models.EmailField(max_length=255, unique=True)),
                ('job_title', models.CharField(blank=True, max_length=255, null=True)),
                ('role_description', models.CharField(blank=True, max_length=255, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('country', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='employees', to='country_management.country')),
                ('employer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='employer', to='employer_management.employer')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='employee', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'A. Employee',
                'verbose_name_plural': 'A. Employees',
            },
        ),
        migrations.CreateModel(
            name='EmployeeContract',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('starting_date', models.DateTimeField(null=True)),
                ('probation_period', models.CharField(choices=[('standard', 'Standard probation period'), ('specific', 'Specific probation period')], max_length=100)),
                ('working_schedule', models.CharField(choices=[('standard', 'Standard working schedule'), ('specific', 'Specific working schedule')], max_length=100)),
                ('paid_time_off', models.CharField(choices=[('standard', 'Standard paid time off'), ('specific', 'Specific paid time off')], max_length=100)),
                ('place_of_work_address', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('contract_term', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='contract', to='employee_management.contractterm')),
                ('employee_contract', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='employee_contracts', to='employee_management.employee')),
            ],
            options={
                'verbose_name': 'B. Employee Contract Information',
            },
        ),
        migrations.CreateModel(
            name='EmployeeCompensation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('gross_salary', models.DecimalField(decimal_places=2, max_digits=10)),
                ('signing_bonus', models.BooleanField(default=True)),
                ('other_bonus', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('currency', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='employee_compensations', to='country_management.currency')),
                ('employee_compensation', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='compensation', to='employee_management.employee')),
                ('health_insurance', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='employee_compensations', to='employee_management.healthinsurance')),
            ],
            options={
                'verbose_name': 'C. Employee Compensation Information',
            },
        ),
    ]
